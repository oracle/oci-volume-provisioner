box: golang:1.9

dev:
  steps:
    - internal/shell

build:
  base-path: "/go/src/github.com/oracle/oci-volume-provisioner"
  steps:
    - script:
      name: validate source code
      code: |
        go get -u github.com/golang/lint/golint
        make gofmt golint govet

    - script:
      name: run unit tests
      code: make test

    - script:
      name: build
      code: make build

    - script:
      name: write VERSION.txt
      code: |
        make version > dist/VERSION.txt
        cat dist/VERSION.txt
      
copy:
  steps:
    - script:
      name: copy build/test artifacts
      code: |
        cp -a dist ${WERCKER_OUTPUT_DIR}
        cp -a test ${WERCKER_OUTPUT_DIR}
        cp -a manifests ${WERCKER_OUTPUT_DIR}

push:
  box:
    id: oraclelinux:7.3
  steps:
    - script:
      name: set ENV vars
      code: |
        export VERSION=$(cat dist/VERSION.txt)
        echo "Pushing version ${VERSION}"

    - script:
      name: prepare
      code: |
        mv ./dist/oci-volume-provisioner /oci-volume-provisioner
        chmod +x /oci-volume-provisioner

    - script:
      name: Install SSL
      code: |
        yum install -y openssl ca-certificates && yum clean all

    - internal/docker-push:
      repository: wcr.io/oracle/oci-volume-provisioner
      tag: $VERSION
      entrypoint: /oci-volume-provisioner
      user: 65534 # nobody

system-test:
  box:
    id: wcr.io/oracle/oci-volume-provisioner-system-test:1.0.0
  steps:
    - script:
      name: set ENV vars
      code: |
        export VERSION=$(cat dist/VERSION.txt)
        echo "Pushing test version ${VERSION}"

    - script:
      name: prepare
      code: |
        mv ./dist /dist
        mv ./manifests /manifests
        mv ./test /test

    - internal/docker-push:
      repository: wcr.io/oracle/oci-volume-provisioner-test
      tag: $VERSION
      working-dir: /test/system
      entrypoint: ./runner.py
      user: 65534 # nobody

    - script:
        name: test
        code: |
          cd /test/system
          ./runner.py

release:
  box:
    id: oraclelinux:7-slim
  steps:
    - script:
        name: set ENV vars
        code: |
          export VERSION=$(cat dist/VERSION.txt)
          echo "${VERSION}"

    - github-create-release:
      token: $GITHUB_TOKEN
      tag: $VERSION
      title: $VERSION
      draft: false

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./dist/oci-volume-provisioner.yaml
      filename: oci-volume-provisioner.yaml
      content-type: text/yaml

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./dist/oci-volume-provisioner-rbac.yaml
      filename: oci-volume-provisioner-rbac.yaml
      content-type: text/yaml

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./dist/storage-class-ext3.yaml
      filename: storage-class-ext3.yaml
      content-type: text/yaml

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./dist/storage-class.yaml
      filename: storage-class.yaml
      content-type: text/yaml
      
    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./dist/storage-class-ffsw.yaml
      filename: storage-class-ffsw.yaml
      content-type: text/yaml

          

      
